print()
print ("\033[32mWhat is your RESPONSE variable, Quantitative or Categorical?")
print("(Q or C)\033[0m")
resp_var = input().upper()

if resp_var == "Q":
    print()
    print("\033[32mWhat is your EXPLANATORY variable, None, Quantitative, or Categorical?")
    print("(N or Q or C)\033[0m")
    exp_var = input().upper()

    if exp_var == "N":
        print()
        print("Use 'favstats()' for MEAN, MEDIAN, and SD.")
        print()
        print("Do you want to find a percentile? If so use: 'quantile(data, (percentile))'")
        print("For example: quantile(byui_almuni$Age, .90) to find the 90th percentile of the age of BYUI alumni")
        print()
        print("Graph: Histogram")
        print("hist(data) OR geom_histogram() in ggplot()")
        print()
        print("One sample t-test")
        print("t.test(data, mu = (number), alternative = ('less','greater','two.sided'))")
        print("This tests how likely it is to get the sample data based on the hypothesized mean.")
        print()
        print("Requirements for one sample t-test:")
        print("Data must be normally distributed OR have more than 30 data points.")
        print()
        print("Confidence Interval for t.test")
        print("t.test(data, mu = (number), conf.level = (percent))$conf.int")
        print()
        print("T-test example:")
        print("The byui alumni mean age was 56 in 1980. We think that due to the number recent graduates, the new mean is lower than that.")
        print("Null hypothesis: mu = 56")
        print("Alt hypothesis: mu < 56")
        print("t.test(byui_almuni$Age, mu = 56, alternative = 'less')")
        print("p-value = .00673")
        print("Conclusion: reject the null hypothesis")
        print("t.test(byui_alumni$Age, mu = 56, conf.level = .99)$conf.int")
        print("We are 99 percent confident that the true median age of byui alumni is between 34.6 and 42.9")
        print()
        print("\033[32mScroll up if you can't see everything\033[0m")
    elif exp_var == "C":
        print()
        print("Use 'favstats()' for MEAN, MEDIAN, and SD.")
        print("Try favstats((response variable) ~ (explanatory variable))")
        print()
        print("Do you want to find a percentile? If so use: 'quantile((data), (percentile))'")
        print("For example: quantile(byui_almuni$Age, .90) to find the 90th percentile of the age of BYUI alumni")
        print("Try editing your dataset if you want the percentile of say, age by gender")
        print()
        print("Graph: side-by-side boxplot")
        print("boxplot(response_variable ~ explanatory_variable) OR geom_boxplot() in ggplot()")
        print()
        print("\033[32mHow many groups?\033[0m")
        group = input().upper()
        if group == "2":
            print()
            print("\033[32mAre your groups Independant or Dependant?")
            print("I or D\033[0m")
            group_type = input().upper()
            if group_type == "I":
                print()
                print("2 sample t-test")
                print("t.test(respone_variable ~ explanatory_variable, alternative = ('less', 'greater', 'two.sided'))")
                print("REMEMBER: R orgnizes alphabetically")
                print("This tests the difference in the mean, to see if there is a significant difference between them")
                print()
                print("Requirements for 2 sample t-test")
                print("Both sets of data must be normally distributed OR be over 30 data points")
                print()
                print("Confidence Interval for t.test:")
                print("t.test(reponse_variable ~ explanatory_variable, conf.level = (percent))$conf.int")
                print()
                print("2 sample t-test example:")
                print("We think that women buy more grocery shopping on average then men")
                print("Null hypothesis: mu(women) = mu(men)")
                print("Alt hypothesis: mu(women) > mu(men)")
                print("t.test(shopping$cost ~ shopping$gender, alternative = 'less')")
                print("it's 'less' because 'men' will be put before 'women' alphabetically")
                print("p-value: 0.056")
                print("Conclusion: Fail to reject the null hypothesis")
                print("t.test(shopping$cost ~ shopping$gender, conf.level = .9)$conf.int")
                print("We are 90 percent confident that the true average difference inspending costs between men and women is between -89.73$ and 11.28$")
                print()
                print("\033[32mScroll up to previous green text\033[0m")
            elif group_type == "D":
                print()
                print("Matched pairs t-test")
                print("differences <- group1 - group2")
                print("t.test(differences, alternative = ('less', 'greater', 'two.sided'))")
                print("This test tells how close to 0 the differences are. The closer to 0, the more similar the groups")
                print()
                print("Requirements for matched pairs t-test:")
                print("The DIFFERENCES must be normal OR there must be more than 30 differences")
                print()
                print("Confidence Interval for matched pairs t-test:")
                print("t.test(differences, conf.level = (percent))#conf.int")
                print()
                print("Matched Pairs t-test example:")
                print("We think that excercise helps diabetes. To test this we will compare average blood sugar over a week without exercise and a week with exercise")
                print("Null hypothesis: mu(differences) = 0")
                print("Alt hypothesis: mu(differences) < 0")
                print("Because I am doing exercise - no exercise, we are looking for low numbers minus high numbers, which would give a negative outcome.")
                print("differences <- diabetes$exercise - diabetes$control")
                print("t.test(differences, alternative = 'less')")
                print("p-value = 0.003")
                print("Conlusion: reject the null hypothesis")
                print("t.test(differences, conf.level = .95)$conf.int")
                print("We are 95 percent confident that the average decrease in blood sugar when exercising (as opposed to not) is between -11.45 and -14.97")
                print()
                print("\033[32mScroll up to previous green text\033[0m")
            else:
                print()
                print("Error. Restart program")
        elif int(group) > 2:
            print()
            print("ANOVA (Analysis of Variance)")
            print("aov_data <- aov(response_variable ~ explanatory_variable)")
            print("summary(aov_data)")
            print("This test tells you if one of the groups has a mean that is significantlly different than the others (it doesn't tell you which one though)")
            print()
            print("Requirements for ANOVA")
            print("max_sd/min_sd < 2 AND normal residuals")
            print("qqPlot(aov_data$residuals)")
            print()
            print("There is no Confidence Interval for ANOVA")
            print()
            print("ANOVA example:")
            print("We want to test the efficiency of 3 different water filtration devices. We have data about the foreign particles per square centimeter for each")
            print("Null hypothesis: mu1 = mu2 = mu3")
            print("Alt hypothesis: One mu is not equal")
            print("aov_water <- aov(water$contamination ~ water$device)")
            print("summary(aov_water)")
            print("p-value = .0006")
            print("Conclusion: reject the null hypothesis")
            print("qqPlot(aov_water$residuals)")
            print()
            print("\033[32mScroll up to previous green text\033[0m")
        else:
            print()
            print("Error. Restart program")
    elif exp_var == "Q":
        print()
        print("Is this data linearly correlated? If so, what is the correlation coefficient?")
        print("cor(response_variable ~ explanatory_variable)")
        print("A positive correlation coefficient means a positive linear relationship, and negative means a negative linear relationship. Magnitude is between 0 and 1. 0 is no relationship, 1 is a perfect relationship.")
        print("Be sure to check the graph as well. Correlation coefficients don't tell the shole story")
        print()
        print("Graph: Scatterplot")
        print("geom_point() in ggplot. geom_smooth() for regression line.")
        print("In geom_smooth() try method = lm to force a linear line and try se = FALSE to remove the margin of error")
        print()
        print("Linear regression model")
        print("lm_data <- lm(response_variable ~ explanatory_variable)")
        print("summary(lm_data)")
        print("This will tell us the slope and y intercept of the regression line")
        print()
        print("Requirements for regression test")
        print("The residuals are normal AND there is a constant variance")
        print("qqPlot(lm_data$residuals), plot(lm_data, which = 1)")
        print()
        print("Confidence Interval for regression line")
        print("confint(lm_data, conf.level = (percentage))")
        print()
        print("Regression model example:")
        print("We think that iris width is related to eyelash length")
        print("Null hypothesis: Slope (B_1) = 0")
        print("Alt hypothesis: Slope (B_1) != 0")
        print("lm_eyes <- lm(eyes$eyelash ~ eyes$iris)")
        print("summary(lm_eyes)")
        print("p-value = 0.008")
        print("y-int = -19.7mm")
        print("slope = 1.34")
        print("Conclusion: There is a positive linear relationship between iris length and eyelash length.")
        print("confint(lm_eyes)")
        print("We are 95 percent confident that for every mm increase in iris width, the eyelashes increase by 0.45mm to 1.63mm")
        print("qqPlot(lm_eyes$residuals)")
        print("plot(lm_eyes, which = 1)")
        print()
        print("\033[32mScroll up to previous green text\033[0m")
    else:
        print()
        print("Error. Restart program")

elif resp_var == "C":
    print()
    print("\033[32mWhat is your EXPLANATORY variable, None, 2 Groups, or More Groups?")
    print("(N or 2 or M)\033[0m")
    exp_var = input().upper()
    
    if exp_var == "N":
        print()
        print("Try prop.table(table(data)) to get a table of the proportions")
        print()
        print("Graphs: Bar chart, Pie chart")
        print("geom_bar(), add coord_polar('y', start = 0) + theme_void() to make a pie chart")
        print("geom_bar only takes an x-variable")
        print()
        print("1 sample z-test for proportions")
        print("prop.test(x = (response_variable), n = (total data), p = (percentage), alternative = ('less', 'greater', 'two.sided'))")
        print()
        print("Requirements for 1 sample z-test")
        print("n*p >= 10 AND n*(1-p) >= 10, where n = total data and p = hypothesized proportion")
        print()
        print("Confidence Interval:")
        print("prop.test(x = (response_variable), n = (total data), conf.level = (percentage))$conf.int")
        print()
        print("Requirements for Confidence Interval:")
        print("n*p >= 10 AND n*(1-p) >= 10, where n = total data and p = observed proportion")
        print()
        print("1 sample z-test example:")
        print("We want to see if more than 75 percent of students get a passing grade on state tests.")
        print("Null hypothesis: P = 0.75")
        print("Alt hypothesis: P > 0.75")
        print("prop.test(x = 254, n = 318, p = 0.75, alternative = 'greater')")
        print("p-value = 0.02603")
        print("Conclusion: reject null hypothesis")
        print("318*0.75 >= 10 (TRUE)")
        print("318*(1-0.75) >= 10 (TRUE)")
        print("prop.test(x = 254, n = 318, conf.level = 0.90)$conf.int")
        print("We are 90 percent confident that that the true percentage of students that got a passing grade is between 75.8 percent and 83.5 percent")
        print("318*0.79 >= 10 (TRUE)")
        print("318*(1-0.79) >= 10 (TRUE)")
        print()
        print("\033[32mScroll up to previous green text\033[0m")
    elif exp_var == "2":
        print()
        print("Try prop.table(table(data1, data2)) to get a table of the proportions")
        print()
        print("Graphs: Bar chart")
        print("geom_bar(position = 'dodge')")
        print("geom_bar only takes an x-variable. Try fill = 'explanatory_variable' in aes()")
        print()
        print("2 sample z-test for proportions")
        print("prop.test(x = c(response_variable1, response_variable2), n = c(group1_total, group2_total), alternative = ('less', 'greater', 'two.sided'))")
        print("Will tell us if there is a signifficant difference in the proportions")
        print()
        print("Confidence Interval:")
        print("prop.test(x = c(response_variable1, response_variable2), n = c(group1_total, group2_total), conf.level = (percentage))$conf.int")
        print()
        print("Requirements for 2 sample z-test AND Confidence Interval")
        print("FOR EACH GROUP n*p >= 10 AND n*(1-p) >= 10, where n = total group data and p = observed proportion")
        print()
        print("2 sample z-test example:")
        print("We think the proportion of women who like Taylor Swifts music is higher than the proportion of men who like Taylor Swifts music")
        print("Null hypothesis: p(female) = p(male)")
        print("Alt hypothesis: p(female) > p(male)")
        print("prop.test(x = c(45, 27), n = c(57, 43), alternative = ('greater'))")
        print("p-value = 0.060")
        print("Conclusion: Fail to reject the null hypothesis")
        print("prop.test(x = c(45, 27), n = c(57, 43), conf.level = 0.97)$conf.int")
        print("We are 97 percent confident that that the true difference in percentages between women who likee Taylor Swift and men who like Taylor Swift is between -0.06 and 0.38")
        print("57*0.79 >= 10 (TRUE)")
        print("57*(1-0.79) >= 10 (TRUE)")
        print("43*0.63 >= 10 (TRUE)")
        print("43*(1-0.63) >= 10 (TRUE)")
        print()
        print("\033[32mScroll up to previous green text\033[0m")
    elif exp_var == "M":
        print()
        print("Make a two way table")
        print("table(response_variable, explanatory_variable)")
        print()
        print("Graphs: Bar chart")
        print("geom_bar(position = 'dodge')")
        print("geom_bar only takes an x-variable. Try fill = 'explanatory_variable' in aes()")
        print()
        print("Chi squared test")
        print("table_data <- table(response_variable, explanatory_variable)")
        print("chisq.test(table_data)")
        print("Testing to see is the response variable is independant of the explanatory variable")
        print()
        print("Requirements for chi squared test")
        print("There must be at leat 5 expected values for each option")
        print("chisq.test(table_data)$expected >= 5")
        print()
        print("No Confidence Interval")
        print()
        print("Chi squared test example")
        print("We think that the genders of attendees at comicon is different depending on the state that it is held in")
        print("Null hypothesis: gender is independant of state")
        print("Alt hypothesis: gender is not independant of state")
        print("table_con <- table(con$gender, con$state)")
        print("chisq(table_con)")
        print("p-value = 0.12")
        print("Conclusion: fail to reject the null hypothesis")
        print("chisq.test(table_con)$expected >= 5 (TRUE)")
        print()
        print("\033[32mScroll up to previous green text\033[0m")
    else:
        print()
        print("Error. Restart program")

else:
    print()
    print("Error. Restart program")

#Hints

#To select a portion of the data set:
# data$part
# ex: Star_wars$Favorability_of_Luke

# ggplot(data, mapping = aes(x = (explanatory_variable), y = (response_variable), fill = (part of data) or color = (part of data))) +
#
#   geom_(graph)(color = "color" or position = "dodge" or bins = (number) or binwidth = (number) or se = FALSE, or method = lm) +
#
#   labs(x = "", y = "", title = "", fill = "") +
#
#   theme_bw()

#Cleaning a dataset
# new_data <- data %>%
#
#   filter((part of data) ==,<=,>=,<,>,!=,%in% (thing to compare to))
#
#   select((part of data))

#Checking for normality
# qqPlot(data)

#For a table
# table(data1, data2)

#For a table with sums
# addmargins(table(data1, data2))

#For a table of percentages
# prop.table(table(data1, data2))
#Percentage of rows
# prop.table(table(data1, data2), margin = 1)
#Percentage of columns
# prop.table(table(data1, data2), margin = 2)

#To find a standard deviation
# sd(data)